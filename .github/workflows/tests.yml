name: Unit Tests & Integration Tests

on:
  push:
    paths:
      - '.github/workflows/tests.yml'
      - 'altwalker/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'requirements-dev.txt'
      - 'MANIFEST.in'
      - '.flake8'
      - 'tox.ini'

env:
  GRAPHWALKER_VERSION: 4.3.2

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install flake8

    - name: Lint with flake8
      run: |
        flake8 altwalker tests

  unit:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install -r requirements-dev.txt
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        pytest tests/unit -x -s --cov=altwalker --cov-report term --cov-report html:coverage/ altwalker/

    - name: Add summary
      run: |
        python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

    - name: Upload log files
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: unit-logs
        path: '**/*.log'

  integration:
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET Core SDK 2.1
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '2.1'

    - uses: altwalker/setup-graphwalker@v1
      with:
        python-version: '3.12'
        graphwalker-version: ${{ env.GRAPHWALKER_VERSION }}

    - name: Install dependencies
      run: |
        pip install -r requirements-dev.txt
        pip install -r requirements.txt

    - name: Run integration tests
      run: |
        pytest tests/integration -x -s

    - name: Upload log files
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: integration-logs
        path: '**/*.log'

  tox:
    runs-on: ubuntu-latest

    needs: ['unit', 'integration']

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - uses: altwalker/setup-graphwalker@v1
      with:
        python-version: ${{ matrix.python }}
        graphwalker-version: ${{ env.GRAPHWALKER_VERSION }}

    - name: Install dependencies
      run: |
        pip install tox

    - name: Run integration tests
      run: |
        tox -e py

    - name: Upload log files
      uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: tox-logs
        path: '**/*.log'
